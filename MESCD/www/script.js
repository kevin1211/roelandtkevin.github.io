// S√©lection des √©l√©ments CD
const cds = document.querySelectorAll('.cd-item');
const cdTitle = document.getElementById('cdTitle');
const cdLyrics = document.getElementById('cdLyrics');
const cdVideo = document.getElementById('cdVideo');
const cdAudioSource = document.getElementById('cdAudioSource');
const videoError = document.getElementById('videoError');

// Ajouter des √©v√©nements de clic pour chaque CD
cds.forEach(cd => {
    cd.addEventListener('click', () => {
        const cdId = cd.getAttribute('data-cd'); // R√©cup√©rer l'identifiant

        // Mettre √† jour le titre
        cdTitle.textContent = `üé∂ ${cdId.toUpperCase()} üé∂`;

        // Masquer temporairement les paroles et l'erreur vid√©o
        cdLyrics.classList.remove('show');
        videoError.style.display = 'none';
        cdVideo.style.display = 'block';

        // Arr√™ter et r√©initialiser la vid√©o existante
        cdVideo.pause();
        cdVideo.currentTime = 0;  // R√©initialiser la vid√©o au d√©but
        cdAudioSource.src = '';  // Vider la source de la vid√©o pour √©viter qu'elle persiste

        // Charger les paroles
        fetch(`../doc/${cdId}.txt`)
            .then(response => response.text())
            .then(lyrics => {
                cdLyrics.textContent = lyrics;
                setTimeout(() => cdLyrics.classList.add('show'), 100);
            })
            .catch(err => {
                cdLyrics.textContent = "Impossible de charger les paroles.";
                console.error(err);
            });

        // Charger l'audio/vid√©o
        const videoSource = `../doc/${cdId}.mp4`;

        // V√©rifier si la vid√©o existe
        fetch(videoSource, {method: 'HEAD'})
            .then(response => {
                if (response.ok) {
                    cdAudioSource.src = videoSource;
                    cdVideo.load();
                    videoError.style.display = 'none';  // Masquer le message d'erreur si la vid√©o existe
                } else {
                    cdVideo.style.display = 'none';  // Cacher l'√©l√©ment vid√©o si elle est absente
                    videoError.style.display = 'block';  // Afficher le message d'erreur
                }
            })
            .catch(err => {
                cdVideo.style.display = 'none';  // Cacher la vid√©o en cas d'erreur
                videoError.style.display = 'block'; // Afficher le message d'erreur si un probl√®me se produit
                console.error(err);
            });
    });
});
